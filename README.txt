Task Management System

Описание проекта
Task Management System - это REST API для управления задачами. Система позволяет создавать, редактировать, удалять и просматривать задачи, а также управлять их статусом и приоритетом. Реализована аутентификация и авторизация с использованием JWT.

    Основной функционал:
-Аутентификация и авторизация пользователей по email и паролю (JWT).
-Управление задачами (создание, редактирование, удаление, просмотр).
-Поддержка ролевой модели (Администратор, Пользователь).
-Фильтрация и пагинация задач.
-Управление комментариями к задачам.
-Валидация входящих данных.
-Обработка ошибок с понятными сообщениями.
-API-документация через Swagger/OpenAPI.

      Используемые технологии:

-Java 20
-Spring Boot (Spring Security, Spring Data JPA)
-JWT для аутентификации
-MySQL в качестве базы данных
-Docker, Docker Compose для локального запуска
-Swagger для API-документации
-JUnit, Mockito для тестирования

  Установка и запуск:


1. Клонирование репозитория

git clone https://github.com/LRaggir/Management-System.git
cd Management_System_Development_Tasks-Java--master

2. Запуск с помощью Docker Compose
docker-compose up --build

При первом запуске автоматически создается пользователь:
Email: admin@gmail.com
Пароль: 1234
Сервис будет доступен по адресу: http://localhost:8080
Swagger UI: http://localhost:8080/swagger-ui/index.htm
Для начала работы с веб-интерфейсом откройте страницу index.html (страница авторизации)

   API:

1)task-controller
POST /edit - Редактирование задачи
POST /create - Создание новой задачи
GET /getbyuser - Получение задач по пользователю
GET /getbytask_id - Получение задачи по ID
GET /get - Получение списка всех задач
GET /byAssignee - Получение задач по исполнителю
DELETE /delete - Удаление задачи

2)review-controller
POST /createRe - Создание отзыва
GET /getRe - Получение отзывов определенной задачи

3)auth-controller
POST /authorization - Авторизация пользователя (JWT)

4)user-controller
POST /Create - Создание нового пользователя
GET /get_id - Получение пользователя по ID
GET /getA - Получение всех пользователей

Роли пользователей

Администратор: Управляет всеми задачами, назначает исполнителей, изменяет статус и приоритет, оставляет комментарии.

Пользователь: Управляет только своими задачами, если он исполнитель, может менять статус и оставлять комментарии.